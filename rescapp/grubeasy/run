#!/bin/bash
# Rescapp Grub-install run script
# Copyright (C) 2012,2013,2014,2015,2016 Adrian Gibanel Lopez
#
# Rescapp is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Rescapp is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Rescapp.  If not, see <http://www.gnu.org/licenses/>.

source ${RESCATUX_LIB_FILE}

set -x
set -v

# TODO: Program check runtime (Maybe to be stolen from bootinfoscript)

# MAIN PROGRAM

GRUB_INSTALLED_OK_STR="Grub was installed OK! :)"
GRUB_NOT_INSTALLED_STR="Grub was not installed. Something went wrong! :("
WHICH_HARD_DISK_INSTALL_GRUB_STR="Which hard disk to install Grub on?"

UPDATE_GRUB_OK_STR="Grub configuration was updated OK! :)"
UPDATE_GRUB_KO_STR="Grub configuration update went wrong! :("

FSCK_FORCED_OK_STR="Filesystem check with automatic fix was OK! :)"
FSCK_FORCED_KO_STR="Filesystem check with automatic fix went wrong! :("

GRUBEASY_OK_STR="Easy GNU/Linux Boot Fix (Fsck partition, update grub menues and Restore GRUB into the MBR) was OK! :)"
GRUBEASY_NOT_OK_STR="Easy GNU/Linux Boot Fix (Fsck partition, update grub menues and Restore GRUB into the MBR) was not fully completed. Something went wrong! :("

FSCK_FORCED_RUNNING_STR="Performing Filesystem check with automatic fix"

GRUB_INSTALLED_RUNNING_STR="Installing Grub."

UPDATE_GRUB_RUNNING_STR="Updating Grub configuration."

SELECTED_PARTITION=$(rtux_Choose_Partition)


SELECTED_HARD_DISK=$(rtux_Choose_Hard_Disk ${WHICH_HARD_DISK_INSTALL_GRUB_STR});

DEVICE_MAP_RESCATUX_FILE_TMP_PATH=$(rtux_Order_Hard_Disks)

EXIT_SUM=0

if ( rtux_Run_Show_Progress "${FSCK_FORCED_RUNNING_STR}" rtux_Fsck_Forced ${SELECTED_PARTITION} ) ; then
  rtux_Message_Success ${FSCK_FORCED_OK_STR}
else
  rtux_Message_Failure ${FSCK_FORCED_KO_STR}
  false
fi

GRUBFSCK_EXIT_VALUE=$?
EXIT_SUM=$((EXIT_SUM+GRUBFSCK_EXIT_VALUE))

if rtux_Run_Show_Progress "${UPDATE_GRUB_RUNNING_STR}" rtux_Grub_Update_Config ${SELECTED_PARTITION} ${DEVICE_MAP_RESCATUX_FILE_TMP_PATH} ; then
  rtux_Message_Success ${UPDATE_GRUB_OK_STR}
else
  rtux_Message_Failure ${UPDATE_GRUB_KO_STR}
  false
fi

GRUBUPDATE_EXIT_VALUE=$?
EXIT_SUM=$((EXIT_SUM+GRUBUPDATE_EXIT_VALUE))

if rtux_Run_Show_Progress "${GRUB_INSTALLED_RUNNING_STR}" rtux_Grub_Install ${SELECTED_HARD_DISK} ${SELECTED_PARTITION} ${DEVICE_MAP_RESCATUX_FILE_TMP_PATH} ; then
  rtux_Message_Success ${GRUB_INSTALLED_OK_STR}
else
  rtux_Message_Failure ${GRUB_NOT_INSTALLED_STR}
  false
fi

GRUBINSTALL_EXIT_VALUE=$?
EXIT_SUM=$((EXIT_SUM+GRUBINSTALL_EXIT_VALUE))

if [ ${EXIT_SUM} -eq 0 ] ; then
  rtux_Message_Success ${GRUBEASY_OK_STR}
else
  rtux_Message_Failure ${GRUBEASY_NOT_OK_STR}
fi

